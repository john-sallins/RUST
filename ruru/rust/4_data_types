/* 
Length	Signed	Unsigned
8-bit	i8	u8
16-bit	i16	u16
32-bit	i32	u32
64-bit	i64	u64
128-bit	i128	u128
arch	isize	usize

Byte (u8 only)	b'A'  // b activates the byte syntax.

signed integers are integers that either have a '+' or a '-'



*/


// Floating point numbers
// Rust has floating point numbers as f32 and f64. 

fn main() {
    let _x = 2.0; // f64

    println!("The value of _x is {_x}");

    let _y: f32 = 3.0; // f32

    println!("The value of _y is {_y}");

    
        // addition
    let sum = 5 + 10;
    println!("The value of sum is {sum}");
    
        // subtraction
    let difference = 95.5 - 4.3;
    println!("The value of difference is {difference}");
    
        // multiplication
    let product = 4 * 30;
    println!("The value of product is {product}");
    
        // division
    let quotient = 56.7 / 32.2;
    let truncated = -5 / 3; // Results in -1
    println!("The value of quotient is {quotient}");
    
        // remainder
    let remainder = 43 % 5;
    println!("The value of remainder is {remainder}");
    

}




