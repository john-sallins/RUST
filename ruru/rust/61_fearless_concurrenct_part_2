// Waiting for All Threads to Finish Using return type -> join Handles
// Join Handle is the return type for concurrency thread. 

// Because the program ends when the main thread ends; this causes the spawned thread to end prematurely.

// Hence, in order to stop the spawned thread to end prematurely, 
// we can use the join.handle return type.


use std::thread;
use std::time::Duration;

fn main() {
    let handle = thread::spawn(|| {
        for i in 1..10 {
            println!("hi number {} from the spawned thread!", i);
            thread::sleep(Duration::from_millis(1));
        }
    });

    handle.join().unwrap();

    for i in 1..5 {
        println!("hi number {} from the main thread!", i);
        thread::sleep(Duration::from_millis(1));
    }
}