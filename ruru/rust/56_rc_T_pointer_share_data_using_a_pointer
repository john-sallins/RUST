// Cons list - Recursive
// Using Rc<T> to Share Data
// Let's create two lists that both share ownership of a third list
// 15.4 -> https://doc.rust-lang.org/book/ch15-04-rc.html#using-rct-to-share-data


enum List {
    Cons(i32, Rc<List>),
    Nil,
}

use crate::List::{Cons, Nil};
use std::rc::Rc;

fn main() {
    let a = Rc::new(Cons(5, Rc::new(Cons(10, Rc::new(Nil)))));
    let b = Cons(3, Rc::clone(&a));
    let c = Cons(4, Rc::clone(&a));
}